skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(head, c(8,4,0))
evaluate(head(x), c(8,4,0))
evaluate(head, c(8,4,0))
?head
evaluate(head(x){x}, c(8,4,0))
evaluate(head, c(8,4,0))
head, c(8,4,0)
head(c(8,4,0))
evaluate(head(x,n=1), c(8,4,0))
evaluate(head(x[1]), c(8,4,0))
skip()
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
telegram("What the fuck did you just say to me you little bitch?")
submit()
submit()
mad_libs("Norway", "cunty", "dragon dildos")
submit()
I %p% love %p% R
I %p% love
skip()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
View(flag_colors)
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals -> lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
bye()
swirt
swirl()
sapply(flags, unique)
bye()
bye()
exit()
library(swirl)
swirl()
n(cran, by_package)
n(by_package)
n()
summarize(by_package, n())
source('C:/Users/per_000/AppData/Local/Temp/RtmpGGvx0G/summarize1.R')
submit()
avg_bytes = mean(size))
avg_bytes = mean(size)
avg_bytes = mean(size))
summarize(by_package, avg_bytes = mean(size))
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique >465)
View(top_unique)
arrange(top_unique, desc(unique))
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
cran
?select
cran
select(ip_id, country, package, size) %>%
''
submit()
?mmutate
?mutate
mutate(cran, size_mb = size / 2^20)
submit()
print
mutate(cran, size_mb = size / 2^20)
submit()
mutate(cran, size_mb = size / 2^20) %>% print
submit()
mutate(size_mb = size / 2^20) %>% print
print
mutate(cran, size_mb = size / 2^20) %>%
mutate(cran, size_mb = size / 2^20) %>% print
mutate(cran, size_mb = size / 2^20) %>% print
submit()
mutate(cran, size_mb = size/2^20 ) %>% print
submit()
mutate(cran, size_mb = size/2^20) %>% print
submit()
library(swirl)
swirl()
library(tidir)
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into = c("sex, class"))
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
submit()
submit()
submit()
submit()
?spread()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
student4
students4
submit()
submit()
submit
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(passed, status = "failed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?separate
submit()
submit()
table(NEI)
setwd("Coursera/Data Science/4 - Exploratory Data Analysis/Ex 2/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
table(NEI)
summary(NEI)
?aggregate
aggregate(Emissions$NEI, year$NEI, sum)
aggregate(NEI$Emissions, NEI$year, sum)
aggregate(NEI$Emissions, NEI$year, sum)
?numcolwise
library(plyr)
?numcolwise
aggregate(NEI$Emissions ~ NEI$year, sum)
?aggregate
aggregate(NEI, Emissions ~ year, FUN = "sum")
aggregate(NEI$Emissions ~ NEI$year, FUN = "sum")
plot(aggregate(NEI$Emissions ~ NEI$year, FUN = "sum"))
maryland <- subset(NEI, fips = 24510, select = c("Emissions", "year"))
maryland <- subset(NEI, fips = "24510", select = c("Emissions", "year"))
View(maryland)
maryland <- subset(NEI, fips = "24510", select = c("fips", "Emissions", "year"))
View(maryland)
maryland <- subset(NEI, fips == "24510", select = c("fips", "Emissions", "year"))
plot(aggregate($maryland$Emissions ~ maryland$year, FUN = "sum"))
plot(aggregate(maryland$Emissions ~ maryland$year, FUN = "sum"))
abline(lm(Emissions ~ year, NEI), lwd = 2)
abline(lm(Emissions ~ year, maryland), lwd = 2)
abline(lm(aggregate(NEI$Emissions ~ NEI$year), lwd = 2)
)
abline(lm(aggregate(NEI$Emissions ~ NEI$year), lwd = 2))
abline(lm(aggregate(NEI$Emissions ~ NEI$year, FUN = "sum"), lwd = 2))
?dt
library(dplyr)
full_dataset <- left_join(NEI, SCC)
View(full_dataset)
group_by(full_dataset, year) %>% summarise(Total = sum(Emissions))
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions))
)
?lm
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions), col = "red", pch = 20)
)
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions), col = "red")
)
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)))
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), col = "red")
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), lty = 2)
?plot
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), type="l")
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red")
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red", main="Total PM2.5 Emissions pr Year", ylab="Total PM2.5 Emissions (tons)", xlab="Year")
png("plot1.png", width = 800, height = 600)
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red", main="Total PM2.5 Emissions pr Year", ylab="Total PM2.5 Emissions (tons)", xlab="Year")
dev.off()
maryland <- subset(full_dataset, fips == "24510", select = c("fips", "Emissions", "year"))
View(maryland)
# Subsets Maryland data (fips == 24510)
maryland <- subset(NEI, fips == "24510", select = c("fips", "Emissions", "year"))
png("plot1.png", width = 800, height = 600)
plot(group_by(maryland, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red", main="Total PM2.5 Emissions pr Year in Maryland", ylab="Total PM2.5 Emissions (tons)", xlab="Year")
dev.off()
getwd()
# Plots dataset
png("plot1.png", width = 800, height = 600)
plot(group_by(full_dataset, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red", main="Total PM2.5 Emissions pr Year", ylab="Total PM2.5 Emissions (tons)", xlab="Year")
dev.off()
png("plot2.png", width = 800, height = 600)
plot(group_by(maryland, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red", main="Total PM2.5 Emissions pr Year in Maryland", ylab="Total PM2.5 Emissions (tons)", xlab="Year")
dev.off()
?group_by
maryland <- subset(NEI, fips == "24510", select = c("fips", "Emissions", "year", "type"))
View(maryland)
group_by(maryland, year, type) %>% summarise(Total = sum(Emissions))
library(ggplot2)
?"ggplot2"
?ggplot2
maryland_totals <- group_by(maryland, year, type) %>% summarise(Total = sum(Emissions))
qplot(Emissions, year, data = maryland_totals, facets = . ~ type)
head(mpg)
View(maryland_totals)
qplot(Total, year, data = maryland_totals, facets = . ~ type)
qplot(year, Total, data = maryland_totals, facets = . ~ type)
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm")
png("plot3.png", width = 800, height = 600)
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm")
dev.off()
?qplot
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm", ylim = c(0, 3000))
?qplot
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm", ylim = c(0, 3000), ylab = "Total PM2.5 Emissions (tons)", xlab = "Year")
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm", ylim = c(0, 3000), ylab = "Total PM2.5 Emissions (tons)", xlab = "Year", main = "Total PM2.5 Emissions in Maryland by Type")
png("plot3.png", width = 800, height = 600)
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm", ylim = c(0, 3000), ylab = "Total PM2.5 Emissions (tons)", xlab = "Year", main = "Total PM2.5 Emissions in Maryland by Type")
dev.off()
View(full_dataset)
table(full_dataset$Short.Name)
table(full_dataset$SCC.Level.One)
table(full_dataset$SCC.Level.Two)
table(full_dataset$SCC.Level.Three)
table(full_dataset$El.Sector)
table(full_dataset$EI.Sector)
full_data_coal <- subset(full_dataset, EI.Sector == "Fuel Comb - Electric Generation - Coal", select = c("fips", "Emissions", "year", "EI.Sector"))
View(full_data_coal)
coal_data <- subset(full_dataset, EI.Sector == "Fuel Comb - Electric Generation - Coal", select = c("fips", "Emissions", "year", "EI.Sector"))
View(maryland_totals)
View(maryland)
coal_totals_year <- group_by(coal_data, year) %>% summarise(Total = sum(Emissions))
View(coal_totals_year)
View(full_data_coal)
table(coal_data$year)
table(coal_data$year, coal_data$fips)
table(coal_data$year ~ coal_data$fips)
View(coal_totals_year)
table(full_dataset$El.Sector)
table(full_dataset$EI.Sector)
headd(subset(full_dataset, grepl("^Fuel Comb.*Coal$",EI.Sector)))
head(subset(full_dataset, grepl("^Fuel Comb.*Coal$",EI.Sector)))
subset(full_dataset, grepl("^Fuel Comb.*Coal$",EI.Sector), select = c("fips", "Emissions", "year", "EI.Sector"))
coal_data <- subset(full_dataset, grepl("^Fuel Comb.*Coal$",EI.Sector), select = c("fips", "Emissions", "year", "EI.Sector"))
View(coal_data)
table(coal_data$EI.Sector)
table(coal_data$EI.Sector ~ coal_data$Emissions)
summarise(coal_data)
coal_data <- subset(full_dataset, grepl("^Fuel Comb.*Coal$",EI.Sector), select = c("fips", "Emissions", "year", "EI.Sector"))
summarise(coal_data)
str(coal_data)
coal_totals_year <- group_by(coal_data, year) %>% summarise(Total = sum(Emissions))
View(coal_totals_year)
qplot(year, Total, data = coal_totals_year)
qplot(year, Total, data = coal_totals_year, type = "line")
?qplot
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm")
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("line", "smooth"), method = "lm")
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm")
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total coal emissions (tons)", xlab = "Year", main = "Total coal emissions pr year")
# Subsets EI.Sector to entries starting with "Fuel Comb" and ending with "Coal"
coal_data <- subset(full_dataset, grepl("^Fuel Comb.*Coal$",EI.Sector), select = c("fips", "Emissions", "year", "EI.Sector"))
# Calculates totals pr year
coal_totals_year <- group_by(coal_data, year) %>% summarise(Total = sum(Emissions))
png("plot4.png", width = 800, height = 600)
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total coal emissions (tons)", xlab = "Year", main = "Total coal emissions pr year")
dev.off()
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total coal emissions (tons)", xlab = "Year", main = "Total coal combustion-related emissions pr year")
png("plot4.png", width = 800, height = 600)
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total coal emissions (tons)", xlab = "Year", main = "Total coal combustion-related emissions pr year")
dev.off()
table(full_dataset$EI.Sector)
table(full_dataset$SCC.Level.Two)
vehicle_data <- subset(full_dataset, grepl("vehicle", SCC.Level.Two), select = c("fips", "Emissions", "year", "SCC.Level.Two"))
View(vehicle_data)
vehicle_data <- subset(full_dataset, grepl("vehicle", SCC.Level.Two, ignore.case = T), select = c("fips", "Emissions", "year", "SCC.Level.Two"))
View(vehicle_data)
table(vehicle_data$SCC.Level.Two)
vehicle_data$SCC.Level.Two == "Petroleum Refining: SIC"
table(vehicle_data$SCC.Level.Two > 0)
summary(vehicle_data$SCC.Level.Two)
maryland_vehicle <- subset(vehicle_data, fips == 24510, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
vehicle_totals_year <- group_by(maryland_vehicle, year) %>% summarise(Total = sum(Emissions))
View(vehicle_totals_year)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total coal emissions (tons)", xlab = "Year", main = "Total coal combustion-related emissions pr year")
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
vehicle_data <- subset(full_dataset, grepl("vehicle", SCC.Level.Two, ignore.case = T), select = c("fips", "Emissions", "year", "SCC.Level.Two"))
# Subsets Baltimore City (fips == 24510) data
maryland_vehicle <- subset(vehicle_data, fips == 24510, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
# Calculates totals pr year
vehicle_totals_year <- group_by(maryland_vehicle, year) %>% summarise(Total = sum(Emissions))
png("plot4.png", width = 800, height = 600)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
dev.off()
png("plot4.png", width = 800, height = 600)
qplot(year, Total, data = coal_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total coal emissions (tons)", xlab = "Year", main = "Total coal combustion-related emissions pr year")
dev.off()
png("plot5.png", width = 800, height = 600)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
dev.off()
png("plot5.png", width = 800, height = 600)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons) in Baltimore", xlab = "Year", main = "Total vehicle-related emissions pr year")
dev.off()
png("plot5.png", width = 800, height = 600)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year in Baltimore")
dev.off()
png("plot3.png", width = 800, height = 600)
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm", ylim = c(0, 3000), ylab = "Total PM2.5 Emissions (tons)", xlab = "Year", main = "Total PM2.5 Emissions in Baltimore by Type")
dev.off()
png("plot2.png", width = 800, height = 600)
plot(group_by(maryland, year) %>% summarise(Total = sum(Emissions)), type="l", col = "red", main="Total PM2.5 Emissions pr Year in Baltimore", ylab="Total PM2.5 Emissions (tons)", xlab="Year")
dev.off()
?subset
bc_and_la_vehicle <- subset(vehicle_data, fips == 24510, fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset(vehicle_data, fips == 24510 || fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset(vehicle_data, fips == 24510 && fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset(vehicle_data, fips == 24510 | fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset((vehicle_data, fips == 24510 | fips == 06037), select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset((vehicle_data, fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset((vehicle_data, fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset(vehicle_data, fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
View(vehicle_data)
bc_and_la_vehicle <- subset(full_dataset, fips == 06037, select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset((vehicle_data, fips == "24510" | fips == "06037"), select= c("fips", "Emissions", "year", "SCC.Level.Two"))
bc_and_la_vehicle <- subset(vehicle_data, fips == "24510" | fips == "06037", select= c("fips", "Emissions", "year", "SCC.Level.Two"))
vehicle_totals_year <- group_by(bc_and_la_vehicle, year, fips) %>% summarise(Total = sum(Emissions))
View(vehicle_totals_year)
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
?qplot
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller(c("Los Angeles County", "Baltimore City")))
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller = c("Los Angeles County", "Baltimore City"))
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller = label_bquote("Los Angeles County", "Baltimore City"))
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller = label_bquote(c("Los Angeles County", "Baltimore City")))
library(maps)
data(county.fips == 24510)
data(24510)
data("24510")
data(county.fips)
county.fips(24510)
county.fips("24510")
?data
c_fips <- data("county.fips")
head(c_fips)
c_fips <- data(county.fips)
head(c_fips)
rm(c_fips)
c_fips <- data("state.fips")
data("state.fips")
which(county.fips[,1] == 35006)
which(county.fips[,1] == 24510)
which(county.fips[,2] == 24510)
which(county.fips[,1] == 24510)
head(county.fips)
which(county.fips[,1] == 24510)
which(state.fips[,1] == 24510)
which(county.fips[,1] == 06037)
as.character(which(state.fips[,1] == 24510))
source('~/Coursera/Data Science/4 - Exploratory Data Analysis/Ex 2/plot6.R')
source('~/Coursera/Data Science/4 - Exploratory Data Analysis/Ex 2/plot6.R')
fips_labeller("06037")
fips_labeller(06037)
fips_labeller(fips, 06037)
fips_labeller("fips", 06037)
fips_labeller(fips, "06037")
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller = fips_labeller)
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller = fips_labeller)
fipscounty
fipscounty(06037)
install.packages(rerddap)
install.packages("rerddap")
library(rerddap)
fipscounty(06037)
fipscounty(06037)
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labels = c("Los Angeles County", "Baltimore City"))
lable_value
source('~/Coursera/Data Science/4 - Exploratory Data Analysis/Ex 2/plot6.R')
qplot(year, Total, data = vehicle_totals_year, facets = . ~ fips, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", labeller = fips_labeller)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", facet_grid(. ~ fips, labeller = fips_labeller))
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", facets(. ~ fips, labeller = fips_labeller))
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year", facets = . ~ fips, labeller = fips_labeller)
qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
bal_la_plot <- qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
bal_la_plot + facet_grid(. ~ fips, labeller = fips_labeller)
png("plot6.png", width = 800, height = 600)
bal_la_plot <- qplot(year, Total, data = vehicle_totals_year, type = "line", geom = c("point", "smooth"), method = "lm", ylab = "Total vehicle emissions (tons)", xlab = "Year", main = "Total vehicle-related emissions pr year")
bal_la_plot + facet_grid(. ~ fips, labeller = fips_labeller)
dev.off()
qplot(year, Total, data = maryland_totals, facets = . ~ type, geom = c("point", "smooth"), method = "lm", ylim = c(0, 3000), ylab = "Total PM2.5 Emissions (tons)", xlab = "Year", main = "Total PM2.5 Emissions in Baltimore by Type")
library(kernpack)
library.install()
install.packages("kernpack)
install.packages("kernpack")
install.packages("kernlab")
version
getwd
getwd()
setwd("../../5 - Reproducible Research/Ex 1/")
activity <- read.csv(file = "activity.csv", header = T)
View(activity)
activity$datetime <- paste(activity$date, activity$interval)
library(lubridate)
activity$datetime <- ymd_hm(activity$datetime)
library(stringr)
activity$datetime <- paste(activity$date, str_pad(activity$interval, width = 4, side="left", pad="0")
)
activity$datetime <- paste(activity$date, str_pad(activity$interval, width = 4, side="left", pad="0"))
activity$datetime <- ymd_hm(activity$datetime)
summary(activity)
str(activity)
table(activity$steps, activity$date)
table(sum(activity$steps), activity$date)
group_by(activity, day, steps)
group_by(activity, activity$datetime, steps)
group_by(activity, activity$datetime, activity$steps)
group_by(activity, datetime, steps)
group_by(activity, datetime, steps) %>% summarise(totalsteps = sum(steps))
steps_pr_day <- group_by(activity, datetime, steps) %>% summarise(totalsteps = sum(steps))
View(steps_pr_day)
steps_pr_day <- group_by(activity, date, steps) %>% summarise(totalsteps = sum(steps))
steps_pr_day <- group_by(activity, steps, date) %>% summarise(totalsteps = sum(steps))
steps_pr_day <- group_by(activity, date, steps) %>% summarise(totalsteps = sum(steps))
View(steps_pr_day)
steps_pr_day <- group_by(activity, date, steps) %>% summarise(totalsteps = mean(steps))
steps_pr_day <- group_by(activity, date) %>% summarise(totalsteps = mean(steps))
View(steps_pr_day)
steps_pr_day <- group_by(activity, date) %>% summarise(totalsteps = sum(steps))
View(steps_pr_day)
hist(steps_pr_day)
hist(steps_pr_day$totalsteps)
steps_pr_day <- group_by(activity,
date)
%>% summarise(totalsteps = sum(steps))
steps_pr_day <- group_by(activity,
date) %>%
summarise(totalsteps = sum(steps))
class(steps_pr_day)
mean(steps_pr_day$totalsteps)
mean(steps_pr_day$totalsteps, na.rm = T)
median(steps_pr_day$totalsteps, na.rm = T)
dateDownloaded <- date()
dateDownloaded
steps_pr_interval <- group_by(activity, interval) %>% summarise(meansteps = mean(steps))
View(steps_pr_interval)
steps_pr_interval <- group_by(activity, interval) %>% summarise(meansteps = mean(steps, na.rm = T))
qplot(steps_pr_interval)
qplot(interval, meansteps, data = steps_pr_interval, type="line")
qplot(interval, meansteps, data = steps_pr_interval, type="line", ylab = "Mean number of steps", xlab = "Interval", main = "Average daily activity pattern")
sum(is.na(activity$steps))
sum(is.na(activity$interval))
sum(is.na(activity$steps))
